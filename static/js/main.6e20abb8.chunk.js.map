{"version":3,"sources":["components/templates/center.tsx","services/firebase.ts","hooks/get-data.ts","components/atoms/spinner.tsx","helpers/string.ts","data/consts.ts","components/atoms/text.tsx","components/molecules/title-card.tsx","components/molecules/weight.tsx","components/organisms/card.tsx","components/atoms/text-info-card.tsx","components/organisms/column.tsx","components/organisms/columns.tsx","components/atoms/title.tsx","components/pages/main.tsx","index.tsx"],"names":["Root","styled","div","process","Container","main","Center","children","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","database","firestore","useCards","useState","cards","setCards","useCollectionData","collection","orderBy","value","loading","error","useEffect","console","rotate","keyframes","Spinner","declOfNumber","number","titles","portions","mouse","Text","p","color","fontSize","lineHeight","marginBottom","css","fontWeight","transparancy","Wrapper","Span","span","TitleCard","brand","tagline","taste","countPortions","countMouse","additionally","availability","hover","useMemo","portionsData","mouseData","active","Weight","weight","WrapperWeight","Card","card","setActive","setHover","leave","setLeave","onClick","id","onMouseLeave","onMouseEnter","Link","a","TextInfoCard","description","href","event","preventDefault","article","Column","props","Columns","useCard","map","index","key","H1Styled","h1","Title","title","Main","GlobalStyle","createGlobalStyle","reset","ReactDOM","render","StrictMode","document","querySelector"],"mappings":"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","file":"static/js/main.6e20abb8.chunk.js","sourcesContent":["import React, { ReactElement } from \"react\"\nimport styled from \"styled-components\"\n\ninterface IProps {\n  children: ReactElement[]\n}\n\nconst Root = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 100vh;\n  &:after {\n    background: url(\"${process.env.PUBLIC_URL}/img/background-texture.png\"),\n      linear-gradient(\n        180deg,\n        rgba(0, 0, 0, 0.5) 0%,\n        rgba(0, 0, 0, 5e-5) 49.88%,\n        rgba(0, 0, 0, 0.5) 100%\n      );\n    background-repeat: repeat;\n    content: \"\";\n    position: fixed;\n    top: 0;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    z-index: -1;\n  }\n`\n\nconst Container = styled.main`\n  max-width: 1200px;\n`\n\nconst Center = ({ children }: IProps): ReactElement => {\n  return (\n    <Root>\n      <Container>{children}</Container>\n    </Root>\n  )\n}\n\nexport default Center\n","import firebase from \"firebase\"\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDVB6FMDQjqYCI1o5_pCOiBqh9XkvF8OCI\",\n  authDomain: \"funbox-test-b0399.firebaseapp.com\",\n  databaseURL: \"https://funbox-test-b0399.firebaseio.com\",\n  projectId: \"funbox-test-b0399\",\n  storageBucket: \"funbox-test-b0399.appspot.com\",\n  messagingSenderId: \"215536702188\",\n  appId: \"1:215536702188:web:77304959ed603b85fc4bc9\",\n}\n\nfirebase.initializeApp(firebaseConfig)\n\nexport const database = firebase.firestore()\n","import { useState, useEffect, SetStateAction, Dispatch } from \"react\"\nimport { useCollectionData } from \"react-firebase-hooks/firestore\"\nimport { database } from \"../services/firebase\"\nimport { ICard } from \"../types/interfaces\"\n\ninterface IStateCard {\n  cards: ICard[]\n  setCards: Dispatch<SetStateAction<ICard[]>>\n  loading: boolean\n}\n\nconst useCards = (): IStateCard => {\n  const [cards, setCards] = useState<ICard[]>([])\n  const [value, loading, error] = useCollectionData<ICard>(\n    database.collection(\"cards\").orderBy(\"id\"),\n  )\n\n  useEffect((): void => {\n    if (!loading && !error && value) {\n      setCards(value)\n    }\n\n    if (error) {\n      // eslint-disable-next-line no-console\n      console.error(error)\n    }\n  }, [value, loading, error])\n\n  return { cards, setCards, loading }\n}\n\nexport default useCards\n","import styled, { keyframes } from \"styled-components\"\n\nconst rotate = keyframes`\n from {\n    transform: rotate(0deg);\n  }\n\n  to {\n    transform: rotate(360deg);\n  }\n`\n\nconst Spinner = styled.div`\n  animation: ${rotate} 3s infinite;\n  width: 50px;\n  height: 50px;\n  border: 6px solid #e5e5e5;\n  border-top-color: #51d;\n  border-radius: 50%;\n`\n\nexport default Spinner\n","export const declOfNumber = (number: number, titles: string[]): string => {\n  const cases = [2, 0, 1, 1, 1, 2]\n\n  return titles[\n    number % 100 > 4 && number % 100 < 20\n      ? 2\n      : cases[number % 10 < 5 ? number % 10 : 5]\n  ]\n}\n","export const portions = [\"порция\", \"порции\", \"порций\"]\n\nexport const mouse = [\"мышь\", \"мыши\", \"мышей\"]\n\nexport const taglineHover = \"Котэ не одобряет?\"\n","import styled, { css } from \"styled-components\"\n\ninterface IProps {\n  color: string\n  fontSize: string\n  lineHeight: string\n  marginBottom?: string\n  fontWeight?: string\n  transparancy?: boolean\n}\n\nconst Text = styled.p`\n  color: ${(p: IProps) => p.color};\n  font-size: ${(p: IProps) => p.fontSize};\n  font-family: \"Trebuchet MS\", sans-serif;\n  line-height: ${(p: IProps) => p.lineHeight};\n  ${(p: IProps) =>\n    p.marginBottom &&\n    css`\n      margin-bottom: ${p.marginBottom};\n    `}\n  ${(p: IProps) =>\n    p.fontWeight &&\n    css`\n      font-weight: ${p.fontWeight};\n    `}\n  ${(p: IProps) =>\n    p.transparancy &&\n    css`\n      opacity: 0.5;\n    `}\n`\n\nexport default Text\n","import React, { ReactElement, useMemo } from \"react\"\nimport styled from \"styled-components\"\nimport { declOfNumber } from \"../../helpers/string\"\nimport {\n  portions as portionsData,\n  mouse as mouseData,\n  taglineHover,\n} from \"../../data/consts\"\nimport Text from \"../atoms/text\"\n\ninterface IProps {\n  brand: string\n  tagline: string\n  taste: string\n  countPortions: number\n  countMouse: number\n  additionally?: string\n  availability: boolean\n  hover: boolean\n}\n\nconst Wrapper = styled.div`\n  width: 100%;\n`\n\nconst Span = styled.span`\n  font-weight: 700;\n`\n\nconst TitleCard = ({\n  brand,\n  tagline,\n  taste,\n  countPortions,\n  countMouse,\n  additionally,\n  availability,\n  hover,\n}: IProps): ReactElement => {\n  const portions = useMemo(() => declOfNumber(countPortions, portionsData), [\n    countPortions,\n  ])\n  const mouse = useMemo(() => declOfNumber(countMouse, mouseData), [countMouse])\n\n  return (\n    <Wrapper>\n      <Text\n        // eslint-disable-next-line no-nested-ternary\n        color={availability ? (hover ? \"#e62e7a\" : \"#666666\") : \"#b3b3b3\"}\n        fontSize=\"16px\"\n        lineHeight=\"19px\"\n        marginBottom=\"5px\"\n        transparancy={!availability}\n      >\n        {hover ? taglineHover : tagline}\n      </Text>\n      <Text\n        color={availability ? \"#000000\" : \"#b3b3b3\"}\n        fontSize=\"48px\"\n        lineHeight=\"56px\"\n        fontWeight=\"700\"\n        transparancy={!availability}\n      >\n        {brand}\n      </Text>\n      <Text\n        color={availability ? \"#000000\" : \"#b3b3b3\"}\n        fontSize=\"24px\"\n        lineHeight=\"26px\"\n        fontWeight=\"700\"\n        marginBottom=\"15px\"\n        transparancy={!availability}\n      >\n        {taste}\n      </Text>\n      <Text\n        color={availability ? \"#666666\" : \"#b3b3b3\"}\n        fontSize=\"14px\"\n        lineHeight=\"16px\"\n        transparancy={!availability}\n      >\n        <Span>{countPortions}</Span> {portions}\n        <br />\n        {countMouse > 1 && <Span>{countMouse}</Span>} {mouse} в подарок\n        <br />\n        {additionally && additionally}\n      </Text>\n    </Wrapper>\n  )\n}\n\nexport default TitleCard\n","import React, { ReactElement } from \"react\"\nimport styled, { css } from \"styled-components\"\nimport Text from \"../atoms/text\"\n\ninterface IProps {\n  availability: boolean\n  weight: string\n  active: boolean\n}\n\nexport const Wrapper = styled.div`\n  width: 80px;\n  height: 80px;\n  background-color: ${(p: IProps) => (p.active ? \"#d91667\" : \"#1698d9\")};\n  border-radius: 50%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  ${(p: IProps) =>\n    !p.availability &&\n    css`\n      background-color: #b3b3b3;\n    `}\n`\n\nconst Weight = ({ availability, weight, active }: IProps): ReactElement => {\n  return (\n    <Wrapper availability={availability} active={active} weight=\"\">\n      <Text color=\"#ffffff\" fontSize=\"42px\" lineHeight=\"38px\">\n        {weight}\n      </Text>\n      <Text color=\"#ffffff\" fontSize=\"21px\" lineHeight=\"22px\">\n        кг\n      </Text>\n    </Wrapper>\n  )\n}\n\nexport default Weight\n","import React, { ReactElement, useState, useEffect } from \"react\"\nimport styled, { css } from \"styled-components\"\nimport TitleCard from \"../molecules/title-card\"\nimport Weight, { Wrapper as WrapperWeight } from \"../molecules/weight\"\nimport { ICardActive, IPropsCSSCard } from \"../../types/interfaces\"\n\nexport const Root = styled.div`\n  width: 320px;\n  height: 480px;\n  border-radius: 10px;\n  background: ${(p: IPropsCSSCard) =>\n    p.active\n      ? \"linear-gradient(135deg, transparent 31px, #d91667 0)\"\n      : \"linear-gradient(135deg, transparent 31px, #1698d9 0)\"};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n  ${(p: IPropsCSSCard) =>\n    !p.availability &&\n    css`\n      background: linear-gradient(135deg, transparent 31px, #b3b3b3 0);\n      cursor: default;\n    `}\n  ${(p: IPropsCSSCard) =>\n    !p.active &&\n    p.availability &&\n    css`\n      &:hover {\n        background: linear-gradient(135deg, transparent 31px, #2ea8e6 0);\n      }\n    `}\n  ${(p: IPropsCSSCard) =>\n    p.hover &&\n    p.active &&\n    css`\n      &:hover {\n        background: linear-gradient(135deg, transparent 31px, #e52e7a 0);\n        ${WrapperWeight} {\n          background-color: #e52e7a;\n        }\n      }\n    `}\n`\n\nconst Wrapper = styled.div`\n  width: 312px;\n  height: 472px;\n  border-radius: 10px;\n  background: url(\"${process.env.PUBLIC_URL}/img/cat.png\") bottom left no-repeat,\n    linear-gradient(135deg, transparent 29px, #f2f2f2 0);\n  padding: 17px 12px 12px 47px;\n  display: flex;\n  justify-content: space-between;\n  flex-direction: column;\n  align-items: flex-end;\n  ${(p: IPropsCSSCard) =>\n    !p.availability &&\n    css`\n      background: linear-gradient(\n          135deg,\n          transparent 29px,\n          rgba(255, 255, 255, 0.5) 0\n        ),\n        url(\"${process.env.PUBLIC_URL}/img/cat.png\") bottom left no-repeat,\n        linear-gradient(135deg, transparent 29px, #f2f2f2 0);\n    `}\n`\n\nconst Card = ({ card, setActive }: ICardActive): ReactElement => {\n  const { availability, active } = card\n\n  const [hover, setHover] = useState(false)\n  const [leave, setLeave] = useState(false)\n\n  useEffect((): void => {\n    if (!card.active) {\n      setHover(false)\n      setLeave(false)\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [card])\n\n  return (\n    <Root\n      availability={availability}\n      active={active}\n      onClick={() => setActive(card.id)}\n      onMouseLeave={() => {\n        active && setLeave(true)\n        hover && setHover(false)\n      }}\n      onMouseEnter={() => {\n        active && leave && setHover(true)\n      }}\n      hover={hover}\n    >\n      <Wrapper availability={availability}>\n        <TitleCard {...card} hover={hover} />\n        <Weight {...card} />\n      </Wrapper>\n    </Root>\n  )\n}\n\nexport default Card\n","import React, { ReactElement, MouseEvent } from \"react\"\nimport styled from \"styled-components\"\nimport Text from \"./text\"\nimport { ICardActive } from \"../../types/interfaces\"\n\nconst Wrapper = styled.div`\n  margin-top: 14px;\n`\n\nexport const Link = styled.a`\n  color: #1698d9;\n  font-weight: 700;\n  border-bottom: 1px dashed #1698d9;\n  text-decoration: none;\n`\n\nconst TextInfoCard = ({ card, setActive }: ICardActive): ReactElement => {\n  const { active, availability, taste, description, id } = card\n\n  return (\n    <Wrapper>\n      {!availability && (\n        <Text color=\"#ffff66\" fontSize=\"13px\" lineHeight=\"15px\">\n          Печалька, {taste} закончился.\n        </Text>\n      )}\n      {active && (\n        <Text color=\"#ffffff\" fontSize=\"13px\" lineHeight=\"15px\">\n          {description}\n        </Text>\n      )}\n      {!active && availability && (\n        <Text color=\"#ffffff\" fontSize=\"13px\" lineHeight=\"15px\">\n          Чего сидишь? Порадуй котэ,{\" \"}\n          <Link\n            href=\"#\"\n            onClick={(event: MouseEvent) => {\n              event.preventDefault()\n              setActive(id)\n            }}\n          >\n            купи\n          </Link>\n        </Text>\n      )}\n    </Wrapper>\n  )\n}\n\nexport default TextInfoCard\n","import React, { ReactElement } from \"react\"\nimport styled, { css } from \"styled-components\"\nimport { ICardActive, IPropsCSSCard } from \"../../types/interfaces\"\nimport Card, { Root } from \"./card\"\nimport TextInfoCard, { Link } from \"../atoms/text-info-card\"\nimport { Wrapper as WrapperWeight } from \"../molecules/weight\"\n\nconst Wrapper = styled.article`\n  margin: 26px 40px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  ${(p: IPropsCSSCard) =>\n    !p.active &&\n    p.availability &&\n    css`\n      &:hover {\n        ${Root} {\n          background: linear-gradient(135deg, transparent 31px, #2ea8e6 0);\n        }\n        ${Link} {\n          color: #22a7e9;\n          border-bottom: 1px dashed #2ea8e6;\n        }\n        ${WrapperWeight} {\n          background-color: #2ea8e6;\n        }\n      }\n    `}\n`\n\nconst Column = (props: ICardActive): ReactElement => {\n  const { card } = props\n  const { active, availability } = card\n\n  return (\n    <Wrapper active={active} availability={availability}>\n      <Card {...props} />\n      <TextInfoCard {...props} />\n    </Wrapper>\n  )\n}\n\nexport default Column\n","import React, { ReactElement } from \"react\"\nimport styled from \"styled-components\"\nimport useCard from \"../../hooks/get-data\"\nimport Spinner from \"../atoms/spinner\"\nimport Column from \"./column\"\nimport { ICard } from \"../../types/interfaces\"\n\nconst Container = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-wrap: wrap;\n  min-height: 561px;\n`\n\nconst Columns = (): ReactElement => {\n  const { cards, setCards, loading } = useCard()\n\n  const setActive = (id: string): void => {\n    setCards(\n      cards.map((card: ICard) =>\n        card.id === id ? { ...card, active: !card.active } : card,\n      ),\n    )\n  }\n\n  return (\n    <Container>\n      {loading && <Spinner />}\n      {cards &&\n        cards.map((card, index) => (\n          <Column key={index} card={card} setActive={setActive} />\n        ))}\n    </Container>\n  )\n}\n\nexport default Columns\n","import React, { ReactElement } from \"react\"\nimport styled from \"styled-components\"\n\nconst H1Styled = styled.h1`\n  text-align: center;\n  color: #fff;\n  font-size: 36px;\n  text-shadow: 0px 1px 1px #000000;\n  line-height: 42px;\n  font-family: Exo2, sans-serif;\n  font-weight: 100;\n  margin-top: 50px;\n`\n\ninterface IProps {\n  title: string\n}\n\nconst Title = ({ title }: IProps): ReactElement => {\n  return <H1Styled>{title}</H1Styled>\n}\n\nexport default Title\n","import React, { ReactElement } from \"react\"\nimport Center from \"../templates/center\"\nimport Columns from \"../organisms/columns\"\nimport Title from \"../atoms/title\"\n\nconst Main = (): ReactElement => {\n  return (\n    <Center>\n      <Title title=\"Ты сегодня покормил кота?\" />\n      <Columns />\n    </Center>\n  )\n}\n\nexport default Main\n","import \"react-app-polyfill/ie9\"\nimport \"react-app-polyfill/ie11\"\nimport \"react-app-polyfill/stable\"\nimport React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport Main from \"./components/pages/main\"\nimport { createGlobalStyle } from \"styled-components\"\nimport reset from \"styled-reset\"\n\nconst GlobalStyle = createGlobalStyle`\n  ${reset}\n\n  @font-face {\n    font-family: Exo2;\n    font-style: normal;\n    font-weight: 100;\n    src: url(\"${process.env.PUBLIC_URL}/fonts/Exo2.0-Thin.otf\") format(\"otf\");\n  }\n\n  * {\n    box-sizing: border-box;\n  }\n\n`\n\nReactDOM.render(\n  <React.StrictMode>\n    <GlobalStyle />\n    <Main />\n  </React.StrictMode>,\n  document.querySelector(\"#root\"),\n)\n"],"sourceRoot":""}